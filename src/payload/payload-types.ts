/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {
    archive: ArchiveBlockType;
    richText: RichTextBlockType;
  };
  collections: {
    media: Media;
    pages: Page;
    posts: Post;
    'marketing-contacts': MarketingContact;
    'marketing-lists': MarketingList;
    'marketing-campaigns': MarketingCampaign;
    'marketing-templates': MarketingTemplate;
    'marketing-emails': MarketingEmail;
    users: User;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    'marketing-lists': {
      subscribers: 'marketing-contacts';
    };
    'marketing-campaigns': {
      emails: 'marketing-emails';
    };
  };
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'marketing-contacts': MarketingContactsSelect<false> | MarketingContactsSelect<true>;
    'marketing-lists': MarketingListsSelect<false> | MarketingListsSelect<true>;
    'marketing-campaigns': MarketingCampaignsSelect<false> | MarketingCampaignsSelect<true>;
    'marketing-templates': MarketingTemplatesSelect<false> | MarketingTemplatesSelect<true>;
    'marketing-emails': MarketingEmailsSelect<false> | MarketingEmailsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    navigation: Navigation;
    seo: SEOSettingsType;
  };
  globalsSelect: {
    navigation: NavigationSelect<false> | NavigationSelect<true>;
    seo: SeoSelect<false> | SeoSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      campaignOrchestrator: TaskCampaignOrchestrator;
      completeEmailCampaign: TaskCompleteEmailCampaign;
      sendEmail: TaskSendEmail;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlockType".
 */
export interface ArchiveBlockType {
  prefix?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  target?: 'posts' | null;
  type?: ('query' | 'static') | null;
  posts?: (string | Post)[] | null;
  query?: {
    limit?: number | null;
  };
  settings?: {
    /**
     * Unique ID field, applied to the HTML component wrapping this block. Useful for links to be able to navigate to this particular block on a page.
     */
    id?: string | null;
    htmlTag?: ('div' | 'section' | 'article') | null;
    containerType?: ('none' | 'default' | 'post') | null;
    spacing?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
    spacingType?: ('margin' | 'padding') | null;
    withPrefix?: boolean | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  slug?: string | null;
  title: string;
  cover?: (string | null) | Media;
  article?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    /**
     * Checking this box will add metatags to the page, asking search engines not to index this page. It will also remove it from the sitemap.
     */
    noIndex?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  thumbhash?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextBlockType".
 */
export interface RichTextBlockType {
  data?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  settings?: {
    /**
     * Unique ID field, applied to the HTML component wrapping this block. Useful for links to be able to navigate to this particular block on a page.
     */
    id?: string | null;
    htmlTag?: ('div' | 'section' | 'article') | null;
    containerType?: ('none' | 'default' | 'post') | null;
    spacing?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl') | null;
    spacingType?: ('margin' | 'padding') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'richText';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug?: string | null;
  pathname?: string | null;
  parent?: (string | null) | Page;
  blocks?: (ArchiveBlockType | RichTextBlockType)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    /**
     * Checking this box will add metatags to the page, asking search engines not to index this page. It will also remove it from the sitemap.
     */
    noIndex?: boolean | null;
  };
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-contacts".
 */
export interface MarketingContact {
  id: string;
  email: string;
  name?: string | null;
  subscribed?: boolean | null;
  subscribedAt?: string | null;
  unsubscribedAt?: string | null;
  marketingLists?: (string | MarketingList)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-lists".
 */
export interface MarketingList {
  id: string;
  name: string;
  description?: string | null;
  subscribers?: {
    docs?: (string | MarketingContact)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-campaigns".
 */
export interface MarketingCampaign {
  id: string;
  name: string;
  targetLists: (string | MarketingList)[];
  template?: (string | null) | MarketingTemplate;
  emails?: {
    docs?: (string | MarketingEmail)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  totalEmails?: number | null;
  status?: ('draft' | 'approve' | 'scheduled' | 'sending' | 'completed' | 'cancel') | null;
  method: 'email' | 'sms' | 'directMail';
  type?: ('sendNow' | 'scheduled') | null;
  scheduledDate?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-templates".
 */
export interface MarketingTemplate {
  id: string;
  slug?: string | null;
  type: 'email' | 'sms' | 'directMail';
  blueprint?: 'default' | null;
  name: string;
  email?: {
    fromName?: string | null;
    fromAddress?: string | null;
    subject?: string | null;
    replyTo?: string | null;
    previewText?: string | null;
    blocks?: RichTextEmailBlockType[] | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextEmailBlockType".
 */
export interface RichTextEmailBlockType {
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'richTextEmail';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-emails".
 */
export interface MarketingEmail {
  id: string;
  campaign: string | MarketingCampaign;
  recipient: string | MarketingContact;
  status: 'pending' | 'sent' | 'failed';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  roles: ('admin' | 'editor')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'campaignOrchestrator' | 'completeEmailCampaign' | 'sendEmail';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'campaignOrchestrator' | 'completeEmailCampaign' | 'sendEmail') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'marketing-contacts';
        value: string | MarketingContact;
      } | null)
    | ({
        relationTo: 'marketing-lists';
        value: string | MarketingList;
      } | null)
    | ({
        relationTo: 'marketing-campaigns';
        value: string | MarketingCampaign;
      } | null)
    | ({
        relationTo: 'marketing-templates';
        value: string | MarketingTemplate;
      } | null)
    | ({
        relationTo: 'marketing-emails';
        value: string | MarketingEmail;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  thumbhash?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pathname?: T;
  parent?: T;
  blocks?: T | {};
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
      };
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  cover?: T;
  article?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-contacts_select".
 */
export interface MarketingContactsSelect<T extends boolean = true> {
  email?: T;
  name?: T;
  subscribed?: T;
  subscribedAt?: T;
  unsubscribedAt?: T;
  marketingLists?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-lists_select".
 */
export interface MarketingListsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  subscribers?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-campaigns_select".
 */
export interface MarketingCampaignsSelect<T extends boolean = true> {
  name?: T;
  targetLists?: T;
  template?: T;
  emails?: T;
  totalEmails?: T;
  status?: T;
  method?: T;
  type?: T;
  scheduledDate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-templates_select".
 */
export interface MarketingTemplatesSelect<T extends boolean = true> {
  slug?: T;
  type?: T;
  blueprint?: T;
  name?: T;
  email?:
    | T
    | {
        fromName?: T;
        fromAddress?: T;
        subject?: T;
        replyTo?: T;
        previewText?: T;
        blocks?:
          | T
          | {
              richTextEmail?: T | RichTextEmailBlockTypeSelect<T>;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RichTextEmailBlockType_select".
 */
export interface RichTextEmailBlockTypeSelect<T extends boolean = true> {
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "marketing-emails_select".
 */
export interface MarketingEmailsSelect<T extends boolean = true> {
  campaign?: T;
  recipient?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
  id: string;
  header?: {
    links?:
      | {
          link: LinkProps;
          id?: string | null;
        }[]
      | null;
  };
  footer?: {
    links?:
      | {
          link: LinkProps;
          id?: string | null;
        }[]
      | null;
    socialLinks?:
      | {
          site?: ('facebook' | 'instagram' | 'twitter' | 'youtube') | null;
          url: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkProps".
 */
export interface LinkProps {
  type?: ('reference' | 'custom') | null;
  newTab?: boolean | null;
  reference?: {
    relationTo: 'pages';
    value: string | Page;
  } | null;
  url?: string | null;
  label: string;
  /**
   * Choose how the link should be rendered
   */
  appearance?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
  size?: ('sm' | 'md' | 'lg' | 'xl') | null;
  icon?: ('none' | 'arrowRight' | 'arrowLeft') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo".
 */
export interface SEOSettingsType {
  id: string;
  /**
   * These fallback values are used in the event that an entity does not have any SEO properties configured.
   */
  default?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  header?:
    | T
    | {
        links?:
          | T
          | {
              link?: T | LinkPropsSelect<T>;
              id?: T;
            };
      };
  footer?:
    | T
    | {
        links?:
          | T
          | {
              link?: T | LinkPropsSelect<T>;
              id?: T;
            };
        socialLinks?:
          | T
          | {
              site?: T;
              url?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkProps_select".
 */
export interface LinkPropsSelect<T extends boolean = true> {
  type?: T;
  newTab?: T;
  reference?: T;
  url?: T;
  label?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo_select".
 */
export interface SeoSelect<T extends boolean = true> {
  default?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCampaignOrchestrator".
 */
export interface TaskCampaignOrchestrator {
  input: {
    campaign: string | MarketingCampaign;
  };
  output: {
    success?: boolean | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCompleteEmailCampaign".
 */
export interface TaskCompleteEmailCampaign {
  input: {
    campaign: string | MarketingCampaign;
  };
  output: {
    success?: boolean | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSendEmail".
 */
export interface TaskSendEmail {
  input: {
    template: string | MarketingTemplate;
    email: string | MarketingEmail;
    emailTo: string;
    data?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  output: {
    success?: boolean | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ButtonBlockType".
 */
export interface ButtonBlockType {
  links?:
    | {
        link: LinkProps;
        id?: string | null;
      }[]
    | null;
  settings?: {
    marginTop?: {
      mobile?: number | null;
      tablet?: number | null;
      desktop?: number | null;
    };
    marginBottom?: {
      mobile?: number | null;
      tablet?: number | null;
      desktop?: number | null;
    };
    align?: {
      mobile?: ('none' | 'left' | 'center' | 'right' | 'fullWidth') | null;
      tablet?: ('none' | 'left' | 'center' | 'right' | 'fullWidth') | null;
      desktop?: ('none' | 'left' | 'center' | 'right' | 'fullWidth') | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'button';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}